definitions:
  requests.CreateRepositoryRequest:
    properties:
      name:
        type: string
      owner:
        type: string
      url:
        type: string
    type: object
  requests.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  requests.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: API for apPRoved
  title: apPRoved API
  version: "1.0"
paths:
  /api/v1/health:
    get:
      consumes:
      - application/json
      description: Check if the service is up and running
      produces:
      - application/json
      responses: {}
      summary: Health check
      tags:
      - health
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Login to the application
      parameters:
      - description: User login request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/requests.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Unauthorized
          schema:
            type: string
      summary: Login
      tags:
      - auth
  /api/v1/reviews/repositories:
    get:
      consumes:
      - application/json
      description: Get all repositories for a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get repositories
      tags:
      - reviews
    post:
      consumes:
      - application/json
      description: Create a new repository
      parameters:
      - description: Create repository request
        in: body
        name: createRepositoryRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateRepositoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create repository
      tags:
      - reviews
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get a list of users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with a name, email, and password
      parameters:
      - description: User creation request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new user
      tags:
      - users
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get a user by ID
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

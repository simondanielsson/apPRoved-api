definitions:
  constants.ReviewStatus:
    enum:
    - queued
    - processing
    - available
    type: string
    x-enum-varnames:
    - StatusQueued
    - StatusProcessing
    - StatusAvailable
  requests.CompleteReviewRequest:
    properties:
      file_reviews:
        items:
          $ref: '#/definitions/requests.FileReviewRequest'
        type: array
      review_id:
        type: integer
      review_status_id:
        type: integer
    type: object
  requests.CreateRepositoryRequest:
    properties:
      name:
        type: string
      owner:
        type: string
      url:
        type: string
    type: object
  requests.CreateReviewRequest:
    properties:
      name:
        type: string
    type: object
  requests.FileReviewRequest:
    properties:
      content:
        type: string
      filename:
        type: string
      patch:
        type: string
    type: object
  requests.UpdateReviewRequest:
    properties:
      progress:
        type: integer
      status:
        $ref: '#/definitions/constants.ReviewStatus'
    type: object
info:
  contact: {}
  description: API for apPRoved
  title: apPRoved API
  version: "1.0"
paths:
  /api/v1/health:
    get:
      consumes:
      - application/json
      description: Check if the service is up and running
      produces:
      - application/json
      responses: {}
      summary: Health check
      tags:
      - health
  /api/v1/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Login to the application
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Unauthorized
          schema:
            type: string
      summary: Login
      tags:
      - auth
  /api/v1/register:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Register a new user with a name, email, and password
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Register
      tags:
      - auth
  /api/v1/repositories:
    get:
      consumes:
      - application/json
      description: Get all repositories for a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get repositories
      tags:
      - reviews
    post:
      consumes:
      - application/json
      description: Create a new repository
      parameters:
      - description: Create repository request
        in: body
        name: createRepositoryRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateRepositoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create repository
      tags:
      - reviews
  /api/v1/repositories/{repositoryID}:
    get:
      consumes:
      - application/json
      description: Get a repository
      parameters:
      - description: Repository ID
        in: path
        name: repositoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get repository
      tags:
      - reviews
  /api/v1/repositories/{repositoryID}/pull-requests:
    get:
      consumes:
      - application/json
      description: Get all pull requests for repository
      parameters:
      - description: Repository ID
        in: path
        name: repositoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get pull requests
      tags:
      - reviews
    put:
      consumes:
      - application/json
      description: Update a pull request
      parameters:
      - description: Repository ID
        in: path
        name: repositoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update pull request
      tags:
      - reviews
  /api/v1/repositories/{repositoryID}/pull-requests/{prID}:
    get:
      consumes:
      - application/json
      description: Get a pull request
      parameters:
      - description: Repository ID
        in: path
        name: repositoryID
        required: true
        type: string
      - description: Pull request ID
        in: path
        name: prID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get pull request
      tags:
      - reviews
  /api/v1/repositories/{repositoryID}/pull-requests/{prID}/reviews:
    get:
      consumes:
      - application/json
      description: Get all reviews for a pull request
      parameters:
      - description: Repository ID
        in: path
        name: repositoryID
        required: true
        type: string
      - description: Pull request ID
        in: path
        name: prID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get reviews
      tags:
      - reviews
    post:
      consumes:
      - application/json
      description: Create a review
      parameters:
      - description: Repository ID
        in: path
        name: repositoryID
        required: true
        type: string
      - description: Pull request ID
        in: path
        name: prID
        required: true
        type: string
      - description: Create review request
        in: body
        name: createReviewRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateReviewRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create review
      tags:
      - reviews
  /api/v1/repositories/{repositoryID}/pull-requests/{prID}/reviews/{reviewID}:
    delete:
      consumes:
      - application/json
      description: Delete a review
      parameters:
      - description: Repository ID
        in: path
        name: repositoryID
        required: true
        type: string
      - description: Pull request ID
        in: path
        name: prID
        required: true
        type: string
      - description: Review ID
        in: path
        name: reviewID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete review
      tags:
      - reviews
    get:
      consumes:
      - application/json
      description: Get a review
      parameters:
      - description: Repository ID
        in: path
        name: repositoryID
        required: true
        type: string
      - description: Pull request ID
        in: path
        name: prID
        required: true
        type: string
      - description: Review ID
        in: path
        name: reviewID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get review
      tags:
      - reviews
  /api/v1/repositories/{repositoryID}/pull-requests/{prID}/reviews/{reviewID}/files:
    get:
      consumes:
      - application/json
      description: Get all file reviews for a review
      parameters:
      - description: Repository ID
        in: path
        name: repositoryID
        required: true
        type: string
      - description: Pull request ID
        in: path
        name: prID
        required: true
        type: string
      - description: Review ID
        in: path
        name: reviewID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get file reviews
      tags:
      - reviews
  /api/v1/repositories/{repositoryID}/pull-requests/{prID}/reviews/{reviewID}/progress:
    get:
      consumes:
      - application/json
      description: Get review progress
      parameters:
      - description: Repository ID
        in: path
        name: repositoryID
        required: true
        type: string
      - description: Pull request ID
        in: path
        name: prID
        required: true
        type: string
      - description: Review ID
        in: path
        name: reviewID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get review progress
      tags:
      - reviews
  /api/v1/review-status/{reviewStatusID}:
    put:
      consumes:
      - application/json
      description: Update review progress
      parameters:
      - description: Review Status ID
        in: path
        name: reviewStatusID
        required: true
        type: string
      - description: Update review progress request
        in: body
        name: updateReviewRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateReviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update review progress
      tags:
      - reviews
  /api/v1/reviews/complete:
    post:
      consumes:
      - application/json
      description: Complete a review
      parameters:
      - description: Update review status request
        in: body
        name: completeReviewRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CompleteReviewRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Complete review
      tags:
      - reviews
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get a list of users
      tags:
      - users
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get a user by ID
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
